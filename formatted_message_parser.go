//go:build exclude

package aleoOracleEncoding

import (
	"regexp"
	"strings"
)

// shouldn't be used for anything other than tests, generated by chatgpt
func ParseFormattedMessage(input string) map[string]map[string]string {
	result := make(map[string]map[string]string)

	// Regular expression to match key-value pairs
	r := regexp.MustCompile(`(\w+):\s*({[^{}]*})`)

	// Find all key-value pairs
	matches := r.FindAllStringSubmatch(input, -1)

	for _, match := range matches {
		key := match[1]
		value := match[2]

		// Removing braces from value string
		value = strings.TrimPrefix(value, "{")
		value = strings.TrimSuffix(value, "}")

		// Splitting key-value pairs
		keyValuePairs := strings.Split(value, ",")

		if len(keyValuePairs) > 0 {
			if _, ok := result[key]; !ok {
				result[key] = make(map[string]string)
			}
			for _, pair := range keyValuePairs {
				parts := strings.SplitN(pair, ":", 2)
				if len(parts) == 2 {
					innerKey := strings.TrimSpace(parts[0])
					innerValue := strings.TrimSpace(parts[1])

					// Trimming leading and trailing whitespace
					innerKey = strings.Trim(innerKey, " ")
					innerValue = strings.Trim(innerValue, " ")

					// Removing braces if present in value
					innerValue = strings.TrimPrefix(innerValue, "{")
					innerValue = strings.TrimSuffix(innerValue, "}")

					result[key][innerKey] = innerValue
				}
			}
		}
	}

	return result
}
